'use strict';

var _chai = require('chai');

var _csv = require('./csv');

var _csv2 = _interopRequireDefault(_csv);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(function () {
  var enterModule = require('react-hot-loader').enterModule;

  enterModule && enterModule(module);
})();

var newLine = '\r\n';

var columnSet1 = [{ id: 'cell1' }];
var columnSet2 = [{ id: 'cell1' }, { id: 'cell2' }];
var columnSet3 = [{ id: 'cell1', displayName: 'Cell name' }];
var columnSet4 = [{ id: 'cell2' }, { id: 'cell1' }];

var dataSet1 = [{ cell1: 'row1' }];
var dataSet2 = [{ cell1: 'row1', cell2: 'row1' }];
var dataSet3 = [['cell1', 'cell2']];
var dataSet4 = [['cell1', 'cell2'], ['cell1', 'cell2']];

describe('CSV Creator', function () {
  describe('Default separator', function () {
    var separator = ',';

    it('Single cell', function () {
      var result = (0, _csv2.default)(columnSet1, dataSet1);
      (0, _chai.expect)(result).to.equal('cell1' + newLine + 'row1');
    });

    it('Multiple cell', function () {
      var result = (0, _csv2.default)(columnSet2, dataSet2);
      (0, _chai.expect)(result).to.equal('cell1' + separator + 'cell2' + newLine + 'row1' + separator + 'row1');
    });

    it('Header display name', function () {
      var result = (0, _csv2.default)(columnSet3, dataSet1);
      (0, _chai.expect)(result).to.equal('Cell name' + newLine + 'row1');
    });

    it('Ordered cell', function () {
      var result = (0, _csv2.default)(columnSet4, dataSet2);
      (0, _chai.expect)(result).to.equal('cell2' + separator + 'cell1' + newLine + 'row1' + separator + 'row1');
    });

    it('No header', function () {
      var result = (0, _csv2.default)(columnSet1, dataSet1, separator, true);
      (0, _chai.expect)(result).to.equal('row1');
    });

    it('Auto header', function () {
      var result = (0, _csv2.default)(false, dataSet2);
      (0, _chai.expect)(result).to.equal('cell1' + separator + 'cell2' + newLine + 'row1' + separator + 'row1');
    });

    it('array of array datas - single row', function () {
      var result = (0, _csv2.default)(false, dataSet3);
      (0, _chai.expect)(result).to.equal('cell1' + separator + 'cell2');
    });

    it('array of array datas - multiple row', function () {
      var result = (0, _csv2.default)(false, dataSet4);
      (0, _chai.expect)(result).to.equal('cell1' + separator + 'cell2' + newLine + 'cell1' + separator + 'cell2');
    });

    it('array of array datas - with header', function () {
      var result = (0, _csv2.default)(columnSet4, dataSet4);
      (0, _chai.expect)(result).to.equal('cell2' + separator + 'cell1' + newLine + 'cell1' + separator + 'cell2' + newLine + 'cell1' + separator + 'cell2');
    });
  });

  describe('Semicolon separator', function () {
    var separator = ';';

    it('Single cell', function () {
      var result = (0, _csv2.default)(columnSet1, dataSet1, separator);
      (0, _chai.expect)(result).to.equal('cell1' + newLine + 'row1');
    });

    it('Multiple cell', function () {
      var result = (0, _csv2.default)(columnSet2, dataSet2, separator);
      (0, _chai.expect)(result).to.equal('cell1' + separator + 'cell2' + newLine + 'row1' + separator + 'row1');
    });

    it('Header display name', function () {
      var result = (0, _csv2.default)(columnSet3, dataSet1, separator);
      (0, _chai.expect)(result).to.equal('Cell name' + newLine + 'row1');
    });

    it('Ordered cell', function () {
      var result = (0, _csv2.default)(columnSet4, dataSet2, separator);
      (0, _chai.expect)(result).to.equal('cell2' + separator + 'cell1' + newLine + 'row1' + separator + 'row1');
    });

    it('No header', function () {
      var result = (0, _csv2.default)(columnSet1, dataSet1, separator, true);
      (0, _chai.expect)(result).to.equal('row1');
    });

    it('Auto header', function () {
      var result = (0, _csv2.default)(false, dataSet2, separator);
      (0, _chai.expect)(result).to.equal('cell1' + separator + 'cell2' + newLine + 'row1' + separator + 'row1');
    });

    it('array of array datas - single row', function () {
      var result = (0, _csv2.default)(false, dataSet3, separator);
      (0, _chai.expect)(result).to.equal('cell1' + separator + 'cell2');
    });

    it('array of array datas - multiple row', function () {
      var result = (0, _csv2.default)(false, dataSet4, separator);
      (0, _chai.expect)(result).to.equal('cell1' + separator + 'cell2' + newLine + 'cell1' + separator + 'cell2');
    });

    it('array of array datas - with header', function () {
      var result = (0, _csv2.default)(columnSet4, dataSet4, separator);
      (0, _chai.expect)(result).to.equal('cell2' + separator + 'cell1' + newLine + 'cell1' + separator + 'cell2' + newLine + 'cell1' + separator + 'cell2');
    });
  });
});
;

(function () {
  var reactHotLoader = require('react-hot-loader').default;

  var leaveModule = require('react-hot-loader').leaveModule;

  if (!reactHotLoader) {
    return;
  }

  reactHotLoader.register(newLine, 'newLine', 'src/lib/csv.spec.js');
  reactHotLoader.register(columnSet1, 'columnSet1', 'src/lib/csv.spec.js');
  reactHotLoader.register(columnSet2, 'columnSet2', 'src/lib/csv.spec.js');
  reactHotLoader.register(columnSet3, 'columnSet3', 'src/lib/csv.spec.js');
  reactHotLoader.register(columnSet4, 'columnSet4', 'src/lib/csv.spec.js');
  reactHotLoader.register(dataSet1, 'dataSet1', 'src/lib/csv.spec.js');
  reactHotLoader.register(dataSet2, 'dataSet2', 'src/lib/csv.spec.js');
  reactHotLoader.register(dataSet3, 'dataSet3', 'src/lib/csv.spec.js');
  reactHotLoader.register(dataSet4, 'dataSet4', 'src/lib/csv.spec.js');
  leaveModule(module);
})();

;