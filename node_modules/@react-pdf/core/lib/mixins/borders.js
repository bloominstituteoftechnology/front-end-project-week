'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var Borders = {
  traceBorder: function traceBorder(style, width) {
    switch (style) {
      case 'dashed':
        this.root.dash(width * 2, { space: width * 1.2 }).stroke();
        break;
      case 'dotted':
        this.root.dash(width, { space: width * 1.2 }).stroke();
        break;
      default:
        this.root.stroke();
    }
  },
  drawHorizontalBorder: function drawHorizontalBorder(p1, p2, r1, r2, width, color, style) {
    if (width <= 0) return;

    this.root.lineWidth(width).moveTo(p1[0], p1[1] + r1).quadraticCurveTo(p1[0], p1[1], p1[0] + r1, p1[1]).lineTo(p2[0] - r2, p2[1]).quadraticCurveTo(p2[0], p2[1], p2[0], p2[1] + r2).strokeColor(color);

    this.traceBorder(style, width);
  },
  drawVerticalBorder: function drawVerticalBorder(p1, p2, r1, r2, width, color, style) {
    if (width <= 0) return;

    this.root.lineWidth(width).moveTo(p1[0] + r1, p1[1]).quadraticCurveTo(p1[0], p1[1], p1[0], p1[1] - r1).lineTo(p2[0], p2[1] + r2).quadraticCurveTo(p2[0], p2[1], p2[0] + r2, p2[1]).strokeColor(color);

    this.traceBorder(style, width);
  },
  drawBorders: function drawBorders() {
    var _getAbsoluteLayout = this.getAbsoluteLayout(),
        left = _getAbsoluteLayout.left,
        top = _getAbsoluteLayout.top,
        width = _getAbsoluteLayout.width,
        height = _getAbsoluteLayout.height;

    var _getComputedStyles = this.getComputedStyles(),
        _getComputedStyles$bo = _getComputedStyles.borderTopWidth,
        borderTopWidth = _getComputedStyles$bo === undefined ? 0 : _getComputedStyles$bo,
        _getComputedStyles$bo2 = _getComputedStyles.borderRightWidth,
        borderRightWidth = _getComputedStyles$bo2 === undefined ? 0 : _getComputedStyles$bo2,
        _getComputedStyles$bo3 = _getComputedStyles.borderBottomWidth,
        borderBottomWidth = _getComputedStyles$bo3 === undefined ? 0 : _getComputedStyles$bo3,
        _getComputedStyles$bo4 = _getComputedStyles.borderLeftWidth,
        borderLeftWidth = _getComputedStyles$bo4 === undefined ? 0 : _getComputedStyles$bo4,
        _getComputedStyles$bo5 = _getComputedStyles.borderTopLeftRadius,
        borderTopLeftRadius = _getComputedStyles$bo5 === undefined ? 0 : _getComputedStyles$bo5,
        _getComputedStyles$bo6 = _getComputedStyles.borderTopRightRadius,
        borderTopRightRadius = _getComputedStyles$bo6 === undefined ? 0 : _getComputedStyles$bo6,
        _getComputedStyles$bo7 = _getComputedStyles.borderBottomRightRadius,
        borderBottomRightRadius = _getComputedStyles$bo7 === undefined ? 0 : _getComputedStyles$bo7,
        _getComputedStyles$bo8 = _getComputedStyles.borderBottomLeftRadius,
        borderBottomLeftRadius = _getComputedStyles$bo8 === undefined ? 0 : _getComputedStyles$bo8,
        _getComputedStyles$bo9 = _getComputedStyles.borderTopColor,
        borderTopColor = _getComputedStyles$bo9 === undefined ? 'black' : _getComputedStyles$bo9,
        _getComputedStyles$bo10 = _getComputedStyles.borderRightColor,
        borderRightColor = _getComputedStyles$bo10 === undefined ? 'black' : _getComputedStyles$bo10,
        _getComputedStyles$bo11 = _getComputedStyles.borderBottomColor,
        borderBottomColor = _getComputedStyles$bo11 === undefined ? 'black' : _getComputedStyles$bo11,
        _getComputedStyles$bo12 = _getComputedStyles.borderLeftColor,
        borderLeftColor = _getComputedStyles$bo12 === undefined ? 'black' : _getComputedStyles$bo12,
        _getComputedStyles$bo13 = _getComputedStyles.borderTopStyle,
        borderTopStyle = _getComputedStyles$bo13 === undefined ? 'solid' : _getComputedStyles$bo13,
        _getComputedStyles$bo14 = _getComputedStyles.borderRightStyle,
        borderRightStyle = _getComputedStyles$bo14 === undefined ? 'solid' : _getComputedStyles$bo14,
        _getComputedStyles$bo15 = _getComputedStyles.borderBottomStyle,
        borderBottomStyle = _getComputedStyles$bo15 === undefined ? 'solid' : _getComputedStyles$bo15,
        _getComputedStyles$bo16 = _getComputedStyles.borderLeftStyle,
        borderLeftStyle = _getComputedStyles$bo16 === undefined ? 'solid' : _getComputedStyles$bo16;

    // Save current graphics stack


    this.root.save();

    // border top
    this.drawHorizontalBorder([left + (borderTopLeftRadius > 0 ? borderTopWidth / 2 : 0), top + borderTopWidth / 2], [left + width - (borderTopRightRadius > 0 ? borderTopWidth / 2 : 0), top + borderTopWidth / 2], borderTopLeftRadius, borderTopRightRadius, borderTopWidth, borderTopColor, borderTopStyle);

    // border right
    this.drawVerticalBorder([left + width - borderRightWidth / 2, top + (borderTopRightRadius > 0 ? borderRightWidth / 2 : 0)], [left + width - borderRightWidth / 2, top + height - (borderBottomRightRadius > 0 ? borderRightWidth / 2 : 0)], -borderTopRightRadius, -borderBottomRightRadius, borderRightWidth, borderRightColor, borderRightStyle);

    // border bottom
    this.drawHorizontalBorder([left + width - (borderBottomRightRadius > 0 ? borderBottomWidth / 2 : 0), top + height - borderBottomWidth / 2], [left + (borderBottomLeftRadius > 0 ? borderBottomWidth / 2 : 0), top + height - borderBottomWidth / 2], -borderBottomRightRadius, -borderBottomLeftRadius, borderBottomWidth, borderBottomColor, borderBottomStyle);

    // border left
    this.drawVerticalBorder([left + borderLeftWidth / 2, top + height - (borderBottomLeftRadius > 0 ? borderLeftWidth / 2 : 0)], [left + borderLeftWidth / 2, top + (borderTopLeftRadius > 0 ? borderLeftWidth / 2 : 0)], borderBottomLeftRadius, borderTopLeftRadius, borderLeftWidth, borderLeftColor, borderLeftStyle);

    // Restore graphics stack to avoid side effects
    this.root.restore();
  }
};

exports.default = Borders;