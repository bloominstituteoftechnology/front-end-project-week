{"code":"var DEFAULT_OVERSHOOT_STRENGTH = 1.525;\r\nexport var reversed = function (easing) { return function (p) { return 1 - easing(1 - p); }; };\r\nexport var mirrored = function (easing) { return function (p) {\r\n    return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\r\n}; };\r\nexport var createReversedEasing = reversed;\r\nexport var createMirroredEasing = mirrored;\r\nexport var createExpoIn = function (power) { return function (p) { return Math.pow(p, power); }; };\r\nexport var createBackIn = function (power) { return function (p) {\r\n    return p * p * ((power + 1) * p - power);\r\n}; };\r\nexport var createAnticipateEasing = function (power) {\r\n    var backEasing = createBackIn(power);\r\n    return function (p) {\r\n        return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\r\n    };\r\n};\r\nexport var linear = function (p) { return p; };\r\nexport var easeIn = createExpoIn(2);\r\nexport var easeOut = reversed(easeIn);\r\nexport var easeInOut = mirrored(easeIn);\r\nexport var circIn = function (p) { return 1 - Math.sin(Math.acos(p)); };\r\nexport var circOut = reversed(circIn);\r\nexport var circInOut = mirrored(circOut);\r\nexport var backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\r\nexport var backOut = reversed(backIn);\r\nexport var backInOut = mirrored(backIn);\r\nexport var anticipate = createAnticipateEasing(DEFAULT_OVERSHOOT_STRENGTH);\r\nvar NEWTON_ITERATIONS = 8;\r\nvar NEWTON_MIN_SLOPE = 0.001;\r\nvar SUBDIVISION_PRECISION = 0.0000001;\r\nvar SUBDIVISION_MAX_ITERATIONS = 10;\r\nvar K_SPLINE_TABLE_SIZE = 11;\r\nvar K_SAMPLE_STEP_SIZE = 1.0 / (K_SPLINE_TABLE_SIZE - 1.0);\r\nvar FLOAT_32_SUPPORTED = typeof Float32Array !== 'undefined';\r\nvar a = function (a1, a2) { return 1.0 - 3.0 * a2 + 3.0 * a1; };\r\nvar b = function (a1, a2) { return 3.0 * a2 - 6.0 * a1; };\r\nvar c = function (a1) { return 3.0 * a1; };\r\nvar getSlope = function (t, a1, a2) {\r\n    return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\r\n};\r\nvar calcBezier = function (t, a1, a2) {\r\n    return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\r\n};\r\nexport function cubicBezier(mX1, mY1, mX2, mY2) {\r\n    var sampleValues = FLOAT_32_SUPPORTED\r\n        ? new Float32Array(K_SPLINE_TABLE_SIZE)\r\n        : new Array(K_SPLINE_TABLE_SIZE);\r\n    var binarySubdivide = function (aX, aA, aB) {\r\n        var i = 0;\r\n        var currentX;\r\n        var currentT;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            }\r\n            else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION &&\r\n            ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    };\r\n    var newtonRaphsonIterate = function (aX, aGuessT) {\r\n        var i = 0;\r\n        var currentSlope = 0;\r\n        var currentX;\r\n        for (; i < NEWTON_ITERATIONS; ++i) {\r\n            currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) {\r\n                return aGuessT;\r\n            }\r\n            currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    };\r\n    var calcSampleValues = function () {\r\n        for (var i = 0; i < K_SPLINE_TABLE_SIZE; ++i) {\r\n            sampleValues[i] = calcBezier(i * K_SAMPLE_STEP_SIZE, mX1, mX2);\r\n        }\r\n    };\r\n    var getTForX = function (aX) {\r\n        var intervalStart = 0.0;\r\n        var currentSample = 1;\r\n        var lastSample = K_SPLINE_TABLE_SIZE - 1;\r\n        var dist = 0.0;\r\n        var guessForT = 0.0;\r\n        var initialSlope = 0.0;\r\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\r\n            intervalStart += K_SAMPLE_STEP_SIZE;\r\n        }\r\n        --currentSample;\r\n        dist =\r\n            (aX - sampleValues[currentSample]) /\r\n                (sampleValues[currentSample + 1] - sampleValues[currentSample]);\r\n        guessForT = intervalStart + dist * K_SAMPLE_STEP_SIZE;\r\n        initialSlope = getSlope(guessForT, mX1, mX2);\r\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n            return newtonRaphsonIterate(aX, guessForT);\r\n        }\r\n        else if (initialSlope === 0.0) {\r\n            return guessForT;\r\n        }\r\n        else {\r\n            return binarySubdivide(aX, intervalStart, intervalStart + K_SAMPLE_STEP_SIZE);\r\n        }\r\n    };\r\n    calcSampleValues();\r\n    var resolver = function (aX) {\r\n        var returnValue;\r\n        if (mX1 === mY1 && mX2 === mY2) {\r\n            returnValue = aX;\r\n        }\r\n        else if (aX === 0) {\r\n            returnValue = 0;\r\n        }\r\n        else if (aX === 1) {\r\n            returnValue = 1;\r\n        }\r\n        else {\r\n            returnValue = calcBezier(getTForX(aX), mY1, mY2);\r\n        }\r\n        return returnValue;\r\n    };\r\n    return resolver;\r\n}\r\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"src/index.ts\"],\"names\":[],\"mappings\":\"AAeA,IAAM,0BAA0B,GAAG,KAAK,CAAC;AAQzC,MAAM,CAAC,IAAM,QAAQ,GAAmB,UAAA,MAAM,IAAI,OAAA,UAAA,CAAC,IAAI,OAAA,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EAAjB,CAAiB,EAAtB,CAAsB,CAAC;AAIzE,MAAM,CAAC,IAAM,QAAQ,GAAmB,UAAA,MAAM,IAAI,OAAA,UAAA,CAAC;IACjD,OAAA,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AAA5D,CAA4D,EADZ,CACY,CAAC;AAG/D,MAAM,CAAC,IAAM,oBAAoB,GAAG,QAAQ,CAAC;AAC7C,MAAM,CAAC,IAAM,oBAAoB,GAAG,QAAQ,CAAC;AAQ7C,MAAM,CAAC,IAAM,YAAY,GAAG,UAAC,KAAa,IAAa,OAAA,UAAA,CAAC,IAAI,OAAA,SAAA,CAAC,EAAI,KAAK,CAAA,EAAV,CAAU,EAAf,CAAe,CAAC;AAGvE,MAAM,CAAC,IAAM,YAAY,GAAG,UAAC,KAAa,IAAa,OAAA,UAAA,CAAC;IACtD,OAAA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAAjC,CAAiC,EADoB,CACpB,CAAC;AAIpC,MAAM,CAAC,IAAM,sBAAsB,GAAG,UAAC,KAAa;IAClD,IAAM,UAAU,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;IACvC,OAAO,UAAA,CAAC;QACN,OAAA,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAA3E,CAA2E,CAAC;AAChF,CAAC,CAAC;AAMF,MAAM,CAAC,IAAM,MAAM,GAAW,UAAA,CAAC,IAAI,OAAA,CAAC,EAAD,CAAC,CAAC;AAErC,MAAM,CAAC,IAAM,MAAM,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AACtC,MAAM,CAAC,IAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AACxC,MAAM,CAAC,IAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AAE1C,MAAM,CAAC,IAAM,MAAM,GAAW,UAAA,CAAC,IAAI,OAAA,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAA1B,CAA0B,CAAC;AAC9D,MAAM,CAAC,IAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AACxC,MAAM,CAAC,IAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;AAE3C,MAAM,CAAC,IAAM,MAAM,GAAG,YAAY,CAAC,0BAA0B,CAAC,CAAC;AAC/D,MAAM,CAAC,IAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AACxC,MAAM,CAAC,IAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AAE1C,MAAM,CAAC,IAAM,UAAU,GAAG,sBAAsB,CAAC,0BAA0B,CAAC,CAAC;AAiB7E,IAAM,iBAAiB,GAAG,CAAC,CAAC;AAC5B,IAAM,gBAAgB,GAAG,KAAK,CAAC;AAC/B,IAAM,qBAAqB,GAAG,SAAS,CAAC;AACxC,IAAM,0BAA0B,GAAG,EAAE,CAAC;AACtC,IAAM,mBAAmB,GAAG,EAAE,CAAC;AAC/B,IAAM,kBAAkB,GAAG,GAAG,GAAG,CAAC,mBAAmB,GAAG,GAAG,CAAC,CAAC;AAC7D,IAAM,kBAAkB,GAAG,OAAO,YAAY,KAAK,WAAW,CAAC;AAG/D,IAAM,CAAC,GAAG,UAAC,EAAU,EAAE,EAAU,IAAK,OAAA,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAzB,CAAyB,CAAC;AAChE,IAAM,CAAC,GAAG,UAAC,EAAU,EAAE,EAAU,IAAK,OAAA,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAnB,CAAmB,CAAC;AAC1D,IAAM,CAAC,GAAG,UAAC,EAAU,IAAK,OAAA,GAAG,GAAG,EAAE,EAAR,CAAQ,CAAC;AAEnC,IAAM,QAAQ,GAAG,UAAC,CAAS,EAAE,EAAU,EAAE,EAAU;IACjD,OAAA,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;AAArD,CAAqD,CAAC;AAExD,IAAM,UAAU,GAAG,UAAC,CAAS,EAAE,EAAU,EAAE,EAAU;IACnD,OAAA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC;AAA7C,CAA6C,CAAC;AAKhD,MAAM,sBACJ,GAAW,EACX,GAAW,EACX,GAAW,EACX,GAAW;IAEX,IAAM,YAAY,GAAG,kBAAkB;QACrC,CAAC,CAAC,IAAI,YAAY,CAAC,mBAAmB,CAAC;QACvC,CAAC,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;IAEnC,IAAM,eAAe,GAAG,UAAC,EAAU,EAAE,EAAU,EAAE,EAAU;QACzD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,QAAQ,CAAC;QACb,IAAI,QAAQ,CAAC;QAEb,GAAG;YACD,QAAQ,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC;YAChC,QAAQ,GAAG,UAAU,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YAC/C,IAAI,QAAQ,GAAG,GAAG,EAAE;gBAClB,EAAE,GAAG,QAAQ,CAAC;aACf;iBAAM;gBACL,EAAE,GAAG,QAAQ,CAAC;aACf;SACF,QACC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,qBAAqB;YAC1C,EAAE,CAAC,GAAG,0BAA0B,EAChC;QAEF,OAAO,QAAQ,CAAC;IAClB,CAAC,CAAC;IAEF,IAAM,oBAAoB,GAAG,UAAC,EAAU,EAAE,OAAe;QACvD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,QAAQ,CAAC;QAEb,OAAO,CAAC,GAAG,iBAAiB,EAAE,EAAE,CAAC,EAAE;YACjC,YAAY,GAAG,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAE3C,IAAI,YAAY,KAAK,GAAG,EAAE;gBACxB,OAAO,OAAO,CAAC;aAChB;YAED,QAAQ,GAAG,UAAU,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YAC9C,OAAO,IAAI,QAAQ,GAAG,YAAY,CAAC;SACpC;QAED,OAAO,OAAO,CAAC;IACjB,CAAC,CAAC;IAEF,IAAM,gBAAgB,GAAG;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,EAAE,EAAE,CAAC,EAAE;YAC5C,YAAY,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,kBAAkB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SAChE;IACH,CAAC,CAAC;IAEF,IAAM,QAAQ,GAAG,UAAC,EAAU;QAC1B,IAAI,aAAa,GAAG,GAAG,CAAC;QACxB,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,IAAM,UAAU,GAAG,mBAAmB,GAAG,CAAC,CAAC;QAC3C,IAAI,IAAI,GAAG,GAAG,CAAC;QACf,IAAI,SAAS,GAAG,GAAG,CAAC;QACpB,IAAI,YAAY,GAAG,GAAG,CAAC;QAEvB,OAEE,aAAa,KAAK,UAAU,IAAI,YAAY,CAAC,aAAa,CAAC,IAAI,EAAE,EACjE,EAAE,aAAa,EACf;YACA,aAAa,IAAI,kBAAkB,CAAC;SACrC;QAED,EAAE,aAAa,CAAC;QAEhB,IAAI;YACF,CAAC,EAAE,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC;gBAClC,CAAC,YAAY,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC;QAClE,SAAS,GAAG,aAAa,GAAG,IAAI,GAAG,kBAAkB,CAAC;QAEtD,YAAY,GAAG,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAG7C,IAAI,YAAY,IAAI,gBAAgB,EAAE;YACpC,OAAO,oBAAoB,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;SAE5C;aAAM,IAAI,YAAY,KAAK,GAAG,EAAE;YAC/B,OAAO,SAAS,CAAC;SAElB;aAAM;YACL,OAAO,eAAe,CACpB,EAAE,EACF,aAAa,EACb,aAAa,GAAG,kBAAkB,CACnC,CAAC;SACH;IACH,CAAC,CAAC;IAEF,gBAAgB,EAAE,CAAC;IAEnB,IAAM,QAAQ,GAAG,UAAC,EAAU;QAC1B,IAAI,WAAW,CAAC;QAGhB,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,EAAE;YAC9B,WAAW,GAAG,EAAE,CAAC;SAGlB;aAAM,IAAI,EAAE,KAAK,CAAC,EAAE;YACnB,WAAW,GAAG,CAAC,CAAC;SAGjB;aAAM,IAAI,EAAE,KAAK,CAAC,EAAE;YACnB,WAAW,GAAG,CAAC,CAAC;SACjB;aAAM;YACL,WAAW,GAAG,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SAClD;QAED,OAAO,WAAW,CAAC;IACrB,CAAC,CAAC;IAEF,OAAO,QAAQ,CAAC;AAClB,CAAC\"}","dts":{"name":"/Users/mattperry/Sites/popmotion/packages/easing/index.d.ts","text":"export declare type Easing = (v: number) => number;\r\nexport declare type EasingModifier = (easing: Easing) => Easing;\r\nexport declare const reversed: EasingModifier;\r\nexport declare const mirrored: EasingModifier;\r\nexport declare const createReversedEasing: EasingModifier;\r\nexport declare const createMirroredEasing: EasingModifier;\r\nexport declare const createExpoIn: (power: number) => Easing;\r\nexport declare const createBackIn: (power: number) => Easing;\r\nexport declare const createAnticipateEasing: (power: number) => Easing;\r\nexport declare const linear: Easing;\r\nexport declare const easeIn: Easing;\r\nexport declare const easeOut: Easing;\r\nexport declare const easeInOut: Easing;\r\nexport declare const circIn: Easing;\r\nexport declare const circOut: Easing;\r\nexport declare const circInOut: Easing;\r\nexport declare const backIn: Easing;\r\nexport declare const backOut: Easing;\r\nexport declare const backInOut: Easing;\r\nexport declare const anticipate: Easing;\r\nexport declare function cubicBezier(mX1: number, mY1: number, mX2: number, mY2: number): (aX: number) => number;\r\n"}}
