{"ast":null,"code":"import axios from 'axios';\nexport var ERROR = 'ERROR';\nexport var GET_NOTES = 'GET_NOTES';\nexport var GETTING_NOTES = 'GETTING_NOTES';\nexport var CREATING_NOTE = 'CREATING_NOTE';\nexport var CREATE_NOTE = 'CREATE_NOTE';\nexport var UPDATE_NOTE = 'UPDATE_NOTES';\nexport var DELETE_NOTE = 'DELETE_NOTE';\nexport var UPDATING_NOTE = 'UPDATING_NOTE';\nexport var DELETING_NOTE = 'DELETING_NOTE';\nexport var SINGLE_NOTE = 'SINGLE_NOTE';\nexport var GETTING_SINGLE_NOTE = 'GETTING_SINGLE_NOTE';\nexport var TOGGLE_UPDATE_NOTE = 'TOGGLE_UPDATE_NOTE';\nexport var getNotes = function getNotes() {\n  return function (dispatch) {\n    dispatch({\n      type: GETTING_NOTES\n    });\n    axios // .get('https://fe-notes.herokuapp.com/note/get/all')\n    .get('http://localhost:5000/api/notes').then(function (response) {\n      dispatch({\n        type: GET_NOTES,\n        payload: response.data\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: ERROR,\n        payload: error\n      });\n    });\n  };\n};\nexport var createNote = function createNote(newNote) {\n  return function (dispatch) {\n    dispatch({\n      type: CREATING_NOTE\n    });\n    axios.post('https://fe-notes.herokuapp.com/note/create', newNote).then(function (response) {\n      dispatch({\n        type: CREATE_NOTE,\n        payload: response.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: ERROR,\n        payload: err\n      });\n    });\n  };\n};\nexport var updateNote = function updateNote(newNote, id) {\n  return function (dispatch) {\n    dispatch({\n      type: UPDATING_NOTE\n    });\n    var URL = 'https://fe-notes.herokuapp.com/note/edit/' + id;\n    axios.put(URL, {\n      title: newNote.title,\n      textBody: newNote.textBody\n    }).then(function (response) {\n      dispatch({\n        type: UPDATE_NOTE,\n        payload: response.data\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: ERROR,\n        payload: error\n      });\n    });\n  };\n};\nexport var viewNote = function viewNote(id) {\n  return function (dispatch) {\n    dispatch({\n      type: GETTING_SINGLE_NOTE\n    });\n    var URL = 'https://fe-notes.herokuapp.com/note/get/' + id;\n    axios.get(URL).then(function (response) {\n      dispatch({\n        type: SINGLE_NOTE,\n        payload: response.data\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: ERROR,\n        payload: error\n      });\n    });\n  };\n};\nexport var deleteNote = function deleteNote(id) {\n  return function (dispatch) {\n    var URL = 'https://fe-notes.herokuapp.com/note/delete/' + id;\n    dispatch({\n      type: DELETING_NOTE\n    });\n    axios.delete(URL).then(function (response) {\n      dispatch({\n        type: DELETE_NOTE,\n        payload: response.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: ERROR,\n        payload: err\n      });\n    });\n  };\n};\nexport var updateSingleNote = function updateSingleNote(note) {\n  return {\n    type: SINGLE_NOTE,\n    payload: note\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Willie\\front-end-project-week\\src\\actions\\index.js"],"names":["axios","ERROR","GET_NOTES","GETTING_NOTES","CREATING_NOTE","CREATE_NOTE","UPDATE_NOTE","DELETE_NOTE","UPDATING_NOTE","DELETING_NOTE","SINGLE_NOTE","GETTING_SINGLE_NOTE","TOGGLE_UPDATE_NOTE","getNotes","dispatch","type","get","then","response","payload","data","catch","error","createNote","newNote","post","err","updateNote","id","URL","put","title","textBody","viewNote","deleteNote","delete","updateSingleNote","note"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nexport const ERROR = 'ERROR';\r\nexport const GET_NOTES = 'GET_NOTES';\r\nexport const GETTING_NOTES = 'GETTING_NOTES';\r\nexport const CREATING_NOTE = 'CREATING_NOTE';\r\nexport const CREATE_NOTE = 'CREATE_NOTE';\r\nexport const UPDATE_NOTE = 'UPDATE_NOTES';\r\nexport const DELETE_NOTE = 'DELETE_NOTE';\r\nexport const UPDATING_NOTE = 'UPDATING_NOTE';\r\nexport const DELETING_NOTE = 'DELETING_NOTE';\r\nexport const SINGLE_NOTE = 'SINGLE_NOTE';\r\nexport const GETTING_SINGLE_NOTE = 'GETTING_SINGLE_NOTE';\r\nexport const TOGGLE_UPDATE_NOTE = 'TOGGLE_UPDATE_NOTE';\r\n\r\n\r\nexport const getNotes = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: GETTING_NOTES })\r\n    axios\r\n   // .get('https://fe-notes.herokuapp.com/note/get/all')\r\n    .get('http://localhost:5000/api/notes')\r\n      .then(response => {\r\n        dispatch({ type: GET_NOTES, payload: response.data })\r\n      })\r\n      .catch(error => {\r\n        dispatch({ type: ERROR, payload: error })\r\n      });\r\n  }\r\n}\r\n\r\nexport const createNote = (newNote) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: CREATING_NOTE })\r\n    axios.post('https://fe-notes.herokuapp.com/note/create', newNote)\r\n      .then(response => {\r\n        dispatch({ type: CREATE_NOTE, payload: response.data })\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: ERROR, payload: err })\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateNote = (newNote, id) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: UPDATING_NOTE })\r\n    const URL = 'https://fe-notes.herokuapp.com/note/edit/' + id;\r\n    axios\r\n      .put(URL, {\r\n        title: newNote.title,\r\n        textBody: newNote.textBody,\r\n      })\r\n      .then(response => {\r\n        dispatch({ type: UPDATE_NOTE, payload: response.data })\r\n      })\r\n      .catch(error => {\r\n        dispatch({ type: ERROR, payload: error })\r\n      });\r\n  }\r\n}\r\n\r\nexport const viewNote = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: GETTING_SINGLE_NOTE })\r\n    const URL = 'https://fe-notes.herokuapp.com/note/get/' + id;\r\n    axios\r\n      .get(URL)\r\n      .then(response => {\r\n        dispatch({ type: SINGLE_NOTE, payload: response.data })\r\n      })\r\n      .catch(error => {\r\n        dispatch({ type: ERROR, payload: error })\r\n      });\r\n  }\r\n}\r\n\r\nexport const deleteNote = (id) => {\r\n  return (dispatch) => {\r\n    const URL = 'https://fe-notes.herokuapp.com/note/delete/' + id;\r\n    dispatch({ type: DELETING_NOTE })\r\n    axios\r\n      .delete(URL)\r\n      .then(response => {\r\n        dispatch({ type: DELETE_NOTE, payload: response.data });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: ERROR, payload: err })\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateSingleNote = note => {\r\n  return {\r\n    type: SINGLE_NOTE,\r\n    payload: note\r\n  };\r\n};"]},"metadata":{},"sourceType":"module"}