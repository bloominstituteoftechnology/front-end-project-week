{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\rdesa\\\\Desktop\\\\LambdaSchool\\\\front-end-project-week\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\rdesa\\\\Desktop\\\\LambdaSchool\\\\front-end-project-week\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\rdesa\\\\Desktop\\\\LambdaSchool\\\\front-end-project-week\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\rdesa\\\\Desktop\\\\LambdaSchool\\\\front-end-project-week\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\rdesa\\\\Desktop\\\\LambdaSchool\\\\front-end-project-week\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\rdesa\\\\Desktop\\\\LambdaSchool\\\\front-end-project-week\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { Route } from 'react-router-dom';\nimport Notes from './components/Notes';\nimport Form from './components/Form';\nimport Nav from './components/Nav';\nimport FullPageNote from './components/FullPageNote';\nimport Login from './components/Login';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.submitHandler = function (username) {\n      if (username !== '') {\n        _this.setState({\n          username: username\n        });\n      } else {\n        alert('Please log in.');\n      }\n    };\n\n    _this.deleteHandler = function (id) {\n      axios.delete(\"https://fe-notes.herokuapp.com/note/delete/\".concat(id)).then(function (res) {\n        _this.setState({\n          deleted: true\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      notes: [],\n      sorted: false,\n      username: ''\n    };\n    return _this;\n  } // brings in the notes from the server\n\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('https://fe-notes.herokuapp.com/note/get/all').then(function (res) {\n        return _this2.setState({\n          notes: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } // brings in the notes from the server (mindful of updates)\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this3 = this;\n\n      axios.get('https://fe-notes.herokuapp.com/note/get/all').then(function (res) {\n        return _this3.setState({\n          notes: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      // Just some basic routes with render props. The only real prop passed down is notes from state (from the server).\n      if (this.state.username === '') {\n        return React.createElement(Login, {\n          submitHandler: this.submitHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(Notes, Object.assign({}, props, {\n            notes: _this4.state.notes,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/notes/:id\",\n        render: function render(props) {\n          return React.createElement(FullPageNote, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add\",\n        render: function render(props) {\n          return React.createElement(Form, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // SORT FUNCTIONALITY THAT DIDN'T WORK\n// AZSort = arr => {\n//   function compare(a, b) {\n//     const titleA = a.title.toUpperCase();\n//     const titleB = b.title.toUpperCase();\n//     let comparison = 0;\n//     if (titleA > titleB) {\n//       comparison = 1;\n//     } else if (titleA < titleB) {\n//       comparison = -1;\n//     }\n//     return comparison;\n//   }\n//   this.setState({\n//     sorted: true, \n//     notes: arr.sort(compare)\n//   })\n// }","map":{"version":3,"sources":["C:\\Users\\rdesa\\Desktop\\LambdaSchool\\front-end-project-week\\src\\App.js"],"names":["React","Component","axios","Route","Notes","Form","Nav","FullPageNote","Login","App","submitHandler","username","setState","alert","deleteHandler","id","delete","then","res","deleted","catch","err","console","log","state","notes","sorted","get","data","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { Route } from 'react-router-dom';\nimport Notes from './components/Notes';\nimport Form from './components/Form';\nimport Nav from './components/Nav';\nimport FullPageNote from './components/FullPageNote'\nimport Login from './components/Login'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      notes: [],\n      sorted: false,\n      username: '',\n    }\n  }\n\n  // brings in the notes from the server\n  componentDidMount() {\n      axios.get('https://fe-notes.herokuapp.com/note/get/all')\n      .then(res => this.setState({\n        notes: res.data\n       }))\n      .catch(err => console.log(err))\n  }\n\n  // brings in the notes from the server (mindful of updates)\n  componentDidUpdate() {\n      axios.get('https://fe-notes.herokuapp.com/note/get/all')\n        .then(res => this.setState({\n          notes: res.data\n        }))\n        .catch(err => console.log(err))\n  }\n\n  submitHandler = username => {\n    if (username !== '') {\n      this.setState({username: username})\n    }\n    else {\n      alert('Please log in.')\n    }\n  }\n\n  deleteHandler = id => {\n    axios.delete(`https://fe-notes.herokuapp.com/note/delete/${id}`)\n         .then(res => {this.setState({\n             deleted: true,\n         })})\n         .catch(err => console.log(err))\n  }\n\n  render() {\n    // Just some basic routes with render props. The only real prop passed down is notes from state (from the server).\n    if (this.state.username === '') {\n      return(\n        <Login submitHandler={this.submitHandler}/>\n      )\n    }\n\n    return (\n      <div className=\"App\">\n        <Nav/>\n\n        <Route\n          exact path=\"/\"\n          render={props => (\n            <Notes {...props} notes={this.state.notes} />\n          )} \n        />\n\n        <Route\n          path=\"/notes/:id\"\n          render={props => (\n            <FullPageNote {...props} />\n          )}\n        />\n\n        <Route\n          path=\"/add\"\n          render={props => (\n            <Form {...props} />\n          )} \n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n// SORT FUNCTIONALITY THAT DIDN'T WORK\n  // AZSort = arr => {\n  //   function compare(a, b) {\n  //     const titleA = a.title.toUpperCase();\n  //     const titleB = b.title.toUpperCase();\n    \n  //     let comparison = 0;\n  //     if (titleA > titleB) {\n  //       comparison = 1;\n  //     } else if (titleA < titleB) {\n  //       comparison = -1;\n  //     }\n  //     return comparison;\n  //   }\n  //   this.setState({\n  //     sorted: true, \n  //     notes: arr.sort(compare)\n  //   })\n  // }"]},"metadata":{},"sourceType":"module"}