{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\rdesa\\\\Desktop\\\\LambdaSchool\\\\front-end-project-week\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\rdesa\\\\Desktop\\\\LambdaSchool\\\\front-end-project-week\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\rdesa\\\\Desktop\\\\LambdaSchool\\\\front-end-project-week\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\rdesa\\\\Desktop\\\\LambdaSchool\\\\front-end-project-week\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\rdesa\\\\Desktop\\\\LambdaSchool\\\\front-end-project-week\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\rdesa\\\\Desktop\\\\LambdaSchool\\\\front-end-project-week\\\\src\\\\components\\\\FullPageNote.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect, Link } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\n\nvar FullPageNote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FullPageNote, _Component);\n\n  function FullPageNote(props) {\n    var _this;\n\n    _classCallCheck(this, FullPageNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FullPageNote).call(this, props));\n\n    _this.fetchNote = function (id) {\n      axios.get(\"https://fe-notes.herokuapp.com/note/get/\".concat(id)).then(function (response) {\n        _this.setState(function () {\n          return {\n            note: response.data\n          };\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.deleteHandler = function (id) {\n      axios.delete(\"https://fe-notes.herokuapp.com/note/delete/\".concat(id)).then(function (res) {\n        _this.setState({\n          deleted: true\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteModal = function () {\n      document.querySelector('.modalBG').classList.toggle('show');\n    };\n\n    _this.state = {\n      note: null,\n      deleted: false\n    };\n    return _this;\n  } // grab the id and then fetch the relevant note.\n\n\n  _createClass(FullPageNote, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = this.props.match.params.id;\n      this.fetchNote(id);\n    } // GET the note by using the API endpoint and passing in the id\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // redirect upon delete button press (because that will set deleted to true)\n      if (this.state.deleted === true) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      } // put a loader on the screen if getting the note is slow.\n\n\n      if (this.state.note === null) {\n        return React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Fetching note...\");\n      } // here's the full page note with delete and edit buttons (edit is a link to the form, with the note body passed through)\n      // there's also a modal in which you can either delete or cancel\n\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"View Note:\"), React.createElement(\"div\", {\n        className: \"fullpage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.note.title), React.createElement(ReactMarkdown, {\n        className: \"body\",\n        source: this.state.note.textBody,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"delete\",\n        onClick: this.deleteModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"\\u2716\"), React.createElement(Link, {\n        className: \"edit\",\n        to: {\n          pathname: '/add',\n          state: {\n            note: this.state.note\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"EDIT\")), React.createElement(\"div\", {\n        className: \"modalBG\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Are you sure you want to delete this note?\"), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"delete-confirm\",\n        onClick: function onClick() {\n          return _this2.deleteHandler(_this2.state.note._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"div\", {\n        className: \"cancel\",\n        onClick: this.deleteModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return FullPageNote;\n}(Component);\n\nexport default FullPageNote;","map":{"version":3,"sources":["C:\\Users\\rdesa\\Desktop\\LambdaSchool\\front-end-project-week\\src\\components\\FullPageNote.js"],"names":["React","Component","axios","Redirect","Link","ReactMarkdown","FullPageNote","props","fetchNote","id","get","then","response","setState","note","data","catch","err","console","log","deleteHandler","delete","res","deleted","deleteModal","document","querySelector","classList","toggle","state","match","params","title","textBody","pathname","_id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Redirect, Link} from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\n\nclass FullPageNote extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            note: null,\n            deleted: false,\n        }\n    }\n    \n    // grab the id and then fetch the relevant note.\n    componentDidMount() {\n        const {id} = this.props.match.params;\n        this.fetchNote(id);\n    }\n\n    // GET the note by using the API endpoint and passing in the id\n    fetchNote = id => {\n        axios.get(`https://fe-notes.herokuapp.com/note/get/${id}`)\n             .then(response => {\n                this.setState(() => ({ note: response.data }));\n             })\n             .catch(err => {console.log(err)});\n    };\n\n    // DELETE the note by using the API endpoint and passing in the id\n    deleteHandler = id => {\n        axios.delete(`https://fe-notes.herokuapp.com/note/delete/${id}`)\n             .then(res => {this.setState({\n                 deleted: true,\n             })})\n             .catch(err => console.log(err))\n      }\n\n    // bring up the modal\n    deleteModal = () => {\n        document.querySelector('.modalBG').classList.toggle('show');\n    }\n\n    render() {\n        // redirect upon delete button press (because that will set deleted to true)\n        if (this.state.deleted === true) {\n            return (\n                <Redirect to='/'></Redirect>\n            )\n        }\n        // put a loader on the screen if getting the note is slow.\n        if (this.state.note === null) {\n            return (\n                <div className='container'>\n                    Fetching note...\n                </div>\n            )\n        }\n        // here's the full page note with delete and edit buttons (edit is a link to the form, with the note body passed through)\n        // there's also a modal in which you can either delete or cancel\n        return (\n            <div className='container'>\n                <h1>View Note:</h1>\n                \n                <div className='fullpage'>\n                    <h2 className='title'>{this.state.note.title}</h2>\n                    <ReactMarkdown className='body' source={this.state.note.textBody} />\n                    {/* <p className='body'>{this.state.note.textBody}</p> */}\n                    <span className='delete' onClick={this.deleteModal}>✖</span>\n                    <Link className='edit' to={{ pathname: '/add', state: { note: this.state.note} }}>EDIT</Link>\n                </div>\n                \n                <div className='modalBG'>\n                    <div className='modal'>\n                        <h3>Are you sure you want to delete this note?</h3>\n                        <div className='buttons'>\n                            <div className='delete-confirm' onClick={() => this.deleteHandler(this.state.note._id)}>Delete</div>\n                            <div className='cancel' onClick={this.deleteModal}>Cancel</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FullPageNote;"]},"metadata":{},"sourceType":"module"}