{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Willie\\\\front-end-project-week\\\\notes\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Willie\\\\front-end-project-week\\\\notes\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Willie\\\\front-end-project-week\\\\notes\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Willie\\\\front-end-project-week\\\\notes\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Willie\\\\front-end-project-week\\\\notes\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Willie\\\\front-end-project-week\\\\notes\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Willie\\\\front-end-project-week\\\\notes\\\\src\\\\components\\\\noteEdit.js\";\nimport React, { Component } from 'react'; //import axios from \"axios\";\n\nimport \"../css/note.css\";\nimport { viewNote } from '../actions';\nimport { updateNote } from '../actions';\nimport { connect } from 'react-redux';\n\nvar NoteEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NoteEdit, _Component);\n\n  function NoteEdit(props) {\n    var _this;\n\n    _classCallCheck(this, NoteEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NoteEdit).call(this, props));\n\n    _this.noteUpdate = function (e) {\n      e.preventDefault(); //const { tags, title, textBody } = this.props.noteSelected;\n\n      var newRec = {\n        tags: _this.state.tags,\n        title: _this.state.title,\n        textBody: _this.state.textBody\n      };\n      console.log(\"newRec\", newRec);\n\n      _this.props.updateNote(newRec, _this.props.id); //this.setState({ tags: '', title: '', textBody: '' });\n\n\n      console.log(\"this.noteUpdate state:\", _this.state);\n    };\n\n    _this.changeHandler = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n\n      console.log(_this.state);\n    };\n\n    _this.state = {\n      notes: [],\n      tags: '',\n      title: '',\n      textBody: '',\n      id: '',\n      select: null\n    };\n    return _this;\n  }\n\n  _createClass(NoteEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.viewNote(this.props.id);\n      console.log(\"this.props.id\", this.props.id);\n      /*   const URL = 'https://fe-notes.herokuapp.com/note/get/' + this.props.id;\r\n        axios\r\n            .get(URL)\r\n            .then(response => {\r\n                this.setState(() => ({ notes: response.data }));\r\n            })\r\n            .catch(error => {\r\n                console.error('Server Error', error);\r\n            }); */\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"note-edit-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"note-create-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Edit Note:\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"note-title-input\",\n        placeholder: this.props.noteSelected.title,\n        value: this.props.value,\n        onChange: this.changeHandler,\n        name: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        type: \"text\",\n        placeholder: this.props.noteSelected.textBody,\n        className: \"note-textarea\",\n        value: this.props.value,\n        onChange: this.changeHandler,\n        name: \"textBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"update-button\",\n        onClick: this.noteUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Update\"));\n    }\n  }]);\n\n  return NoteEdit;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var singleNoteReducer = state.singleNoteReducer;\n  return {\n    // deletingNote: state.notesReducer.deletingNote,\n    error: state.notesReducer.error,\n    noteSelected: state.singleNoteReducer.noteSelected\n    /*  notes: notesReducer.notes,  */\n\n    /*  error: notesReducer.error, */\n\n  };\n};\n\nexport default connect(mapStateToProps, {\n  /* deleteNote, */\n\n  /* \tupdateSingleNote, */\n\n  /* toggleShowUpdate, */\n  viewNote: viewNote,\n  updateNote: updateNote\n})(NoteEdit);","map":{"version":3,"sources":["C:\\Users\\Willie\\front-end-project-week\\notes\\src\\components\\noteEdit.js"],"names":["React","Component","viewNote","updateNote","connect","NoteEdit","props","noteUpdate","e","preventDefault","newRec","tags","state","title","textBody","console","log","id","changeHandler","setState","target","name","value","notes","select","noteSelected","mapStateToProps","singleNoteReducer","error","notesReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import axios from \"axios\";\r\nimport \"../css/note.css\"\r\nimport { viewNote } from '../actions';\r\nimport { updateNote } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass NoteEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            notes: [],\r\n            tags: '',\r\n            title: '',\r\n            textBody: '',\r\n            id: '',\r\n            select: null,\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n            this.props.viewNote(this.props.id)\r\n            console.log(\"this.props.id\", this.props.id)\r\n            \r\n         \r\n          \r\n      /*   const URL = 'https://fe-notes.herokuapp.com/note/get/' + this.props.id;\r\n        axios\r\n            .get(URL)\r\n            .then(response => {\r\n                this.setState(() => ({ notes: response.data }));\r\n            })\r\n            .catch(error => {\r\n                console.error('Server Error', error);\r\n            }); */\r\n    }\r\n\r\n\r\n    noteUpdate = (e) => {\r\n       e.preventDefault();\r\n        //const { tags, title, textBody } = this.props.noteSelected;\r\n        const newRec = {\r\n            tags: this.state.tags,\r\n            title: this.state.title,\r\n            textBody: this.state.textBody,\r\n        }\r\n        console.log(\"newRec\", newRec)\r\n        \r\n        this.props.updateNote(newRec, this.props.id);\r\n        //this.setState({ tags: '', title: '', textBody: '' });\r\n        console.log(\"this.noteUpdate state:\", this.state)\r\n    };\r\n\r\n    changeHandler = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        console.log(this.state)\r\n      } \r\n\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"note-edit-form\" >\r\n                <header className=\"note-create-header\">Edit Note:</header>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"note-title-input\"\r\n                    placeholder={this.props.noteSelected.title}\r\n                    value={this.props.value}\r\n                    onChange={this.changeHandler}\r\n                    name=\"title\" />\r\n                <textarea\r\n                    type=\"text\"\r\n                    placeholder={this.props.noteSelected.textBody}\r\n                    className=\"note-textarea\"\r\n                    value={this.props.value}\r\n                    onChange={this.changeHandler}\r\n                    name=\"textBody\" />\r\n                <button\r\n                    className=\"update-button\"\r\n                    onClick={this.noteUpdate}>\r\n                    Update\r\n            </button>\r\n            </form>\r\n        );\r\n    };\r\n}\r\nconst mapStateToProps = state => {\r\n\tconst { singleNoteReducer } = state;\r\n\treturn {\r\n\t // deletingNote: state.notesReducer.deletingNote,\r\n\t  error: state.notesReducer.error,\r\n\t   noteSelected: state.singleNoteReducer.noteSelected \r\n\t/*  notes: notesReducer.notes,  */\r\n\t/*  error: notesReducer.error, */\r\n\t\r\n\t};\r\n  };\r\n  \r\n  export default connect(mapStateToProps, {\r\n\t/* deleteNote, */\r\n/* \tupdateSingleNote, */\r\n\t/* toggleShowUpdate, */\r\n    viewNote,\r\n    updateNote, \r\n  })(NoteEdit);\r\n"]},"metadata":{},"sourceType":"module"}