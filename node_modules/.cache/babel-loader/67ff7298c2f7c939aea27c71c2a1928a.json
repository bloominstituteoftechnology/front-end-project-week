{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Willie\\\\front-end-project-week\\\\notes\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions';\nvar initialState = {\n  noteSelected: {},\n  showUpdate: false,\n  deletingNote: false,\n  gettingSingleNote: false\n};\nexport var singleNoteReducer = function singleNoteReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.DELETING_NOTE:\n      return _objectSpread({}, state, {\n        deletingNote: true\n      });\n\n    case actionTypes.DELETE_NOTE:\n      return _objectSpread({}, state, {\n        noteSelected: action.payload,\n        deletingNote: false\n      });\n\n    case actionTypes.SINGLE_NOTE:\n      return _objectSpread({}, state, {\n        noteSelected: action.payload,\n        gettingSingleNote: false,\n        showUpdate: false\n      });\n\n    case actionTypes.GETTING_SINGLE_NOTE:\n      return _objectSpread({}, state, {\n        gettingSingleNote: true\n      });\n\n    case actionTypes.TOGGLE_UPDATE_NOTE:\n      return _objectSpread({}, state, {\n        showUpdate: !state.showUpdate\n      });\n\n    case actionTypes.UPDATING_NOTE:\n      return _objectSpread({}, state, {\n        updatingNote: true\n      });\n\n    case actionTypes.UPDATE_NOTE:\n      return _objectSpread({}, state, {\n        notes: action.payload,\n        updatingNote: false\n      });\n\n    case actionTypes.ERROR:\n      return _objectSpread({}, state, {\n        deletingNote: false,\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:\\Users\\Willie\\front-end-project-week\\notes\\src\\reducers\\singleNoteReducer.js"],"names":["actionTypes","initialState","noteSelected","showUpdate","deletingNote","gettingSingleNote","singleNoteReducer","state","action","type","DELETING_NOTE","DELETE_NOTE","payload","SINGLE_NOTE","GETTING_SINGLE_NOTE","TOGGLE_UPDATE_NOTE","UPDATING_NOTE","updatingNote","UPDATE_NOTE","notes","ERROR","error"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,YAAY,EAAE,KAHK;AAInBC,EAAAA,iBAAiB,EAAE;AAJA,CAArB;AAOA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,WAAW,CAACU,aAAjB;AACE,+BAAYH,KAAZ;AAAmBH,QAAAA,YAAY,EAAE;AAAjC;;AACF,SAAKJ,WAAW,CAACW,WAAjB;AACE,+BAAYJ,KAAZ;AAAmBL,QAAAA,YAAY,EAAEM,MAAM,CAACI,OAAxC;AAAiDR,QAAAA,YAAY,EAAE;AAA/D;;AACF,SAAKJ,WAAW,CAACa,WAAjB;AACE,+BAAYN,KAAZ;AAAmBL,QAAAA,YAAY,EAAEM,MAAM,CAACI,OAAxC;AAAiDP,QAAAA,iBAAiB,EAAE,KAApE;AAA2EF,QAAAA,UAAU,EAAE;AAAvF;;AACF,SAAKH,WAAW,CAACc,mBAAjB;AACE,+BAAYP,KAAZ;AAAmBF,QAAAA,iBAAiB,EAAE;AAAtC;;AACF,SAAKL,WAAW,CAACe,kBAAjB;AACE,+BAAYR,KAAZ;AAAmBJ,QAAAA,UAAU,EAAE,CAACI,KAAK,CAACJ;AAAtC;;AACA,SAAKH,WAAW,CAACgB,aAAjB;AACA,+BAAYT,KAAZ;AAAmBU,QAAAA,YAAY,EAAE;AAAjC;;AACF,SAAKjB,WAAW,CAACkB,WAAjB;AACE,+BAAYX,KAAZ;AAAmBY,QAAAA,KAAK,EAAEX,MAAM,CAACI,OAAjC;AAA0CK,QAAAA,YAAY,EAAE;AAAxD;;AACA,SAAKjB,WAAW,CAACoB,KAAjB;AACA,+BACKb,KADL;AAEEH,QAAAA,YAAY,EAAE,KAFhB;AAIEiB,QAAAA,KAAK,EAAEb,MAAM,CAACI;AAJhB;;AAMA;AACA,aAAOL,KAAP;AAvBJ;AAyBD,CA1BM","sourcesContent":["import * as actionTypes from '../actions';\r\n\r\nconst initialState = {\r\n  noteSelected: {},\r\n  showUpdate: false,\r\n  deletingNote: false,\r\n  gettingSingleNote: false,\r\n};\r\n\r\nexport const singleNoteReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.DELETING_NOTE:\r\n      return { ...state, deletingNote: true };\r\n    case actionTypes.DELETE_NOTE:\r\n      return { ...state, noteSelected: action.payload, deletingNote: false };\r\n    case actionTypes.SINGLE_NOTE:\r\n      return { ...state, noteSelected: action.payload, gettingSingleNote: false, showUpdate: false };\r\n    case actionTypes.GETTING_SINGLE_NOTE:\r\n      return { ...state, gettingSingleNote: true };\r\n    case actionTypes.TOGGLE_UPDATE_NOTE:\r\n      return { ...state, showUpdate: !state.showUpdate };\r\n      case actionTypes.UPDATING_NOTE:\r\n      return { ...state, updatingNote: true };\r\n    case actionTypes.UPDATE_NOTE:\r\n      return { ...state, notes: action.payload, updatingNote: false };\r\n      case actionTypes.ERROR:\r\n      return {\r\n        ...state,     \r\n        deletingNote: false,\r\n       \r\n        error: action.payload\r\n      };\r\n      default:\r\n      return state;\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}