{"ast":null,"code":"import axios from 'axios';\nexport var ERROR = 'ERROR';\nexport var GET_NOTES = 'GET_NOTES';\nexport var GETTING_NOTES = 'GETTING_NOTES';\nexport var CREATING_NOTE = 'CREATING_NOTE';\nexport var CREATE_NOTE = 'CREATE_NOTE';\nexport var UPDATE_NOTE = 'UPDATE_NOTES';\nexport var DELETE_NOTE = 'DELETE_NOTE';\nexport var UPDATING_NOTE = 'UPDATING_NOTE';\nexport var DELETING_NOTE = 'DELETING_NOTE';\nexport var SINGLE_NOTE = 'SINGLE_NOTE';\nexport var GETTING_SINGLE_NOTE = 'GETTING_SINGLE_NOTE';\nexport var TOGGLE_UPDATE_NOTE = 'TOGGLE_UPDATE_NOTE';\nexport var getNotes = function getNotes() {\n  return function (dispatch) {\n    dispatch({\n      type: GETTING_NOTES\n    });\n    axios.get('https://fe-notes.herokuapp.com/note/get/all').then(function (response) {\n      dispatch({\n        type: GET_NOTES,\n        payload: response.data\n      }); //this.setState(() => ({ notes: response.data }));\n    }).catch(function (error) {\n      dispatch({\n        type: ERROR,\n        payload: error\n      });\n    });\n  };\n};\nexport var createNote = function createNote(newNote) {\n  return function (dispatch) {\n    dispatch({\n      type: CREATING_NOTE\n    });\n    axios.post('https://fe-notes.herokuapp.com/note/create', newNote).then(function (response) {\n      dispatch({\n        type: CREATE_NOTE,\n        payload: response.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: ERROR,\n        payload: err\n      });\n    });\n  };\n};\nexport var updateNote = function updateNote(newNote, id) {\n  console.log(\"newNote\", newNote);\n  console.log(\"id\", id);\n  return function (dispatch) {\n    dispatch({\n      type: UPDATING_NOTE\n    });\n    var URL = 'https://fe-notes.herokuapp.com/note/edit/' + id;\n    axios.put(URL, {\n      title: newNote.title,\n      textBody: newNote.textBody\n    }).then(function (response) {\n      dispatch({\n        type: UPDATE_NOTE,\n        payload: response.data\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: ERROR,\n        payload: error\n      });\n    });\n  };\n};\nexport var viewNote = function viewNote(id) {\n  return function (dispatch) {\n    dispatch({\n      type: GETTING_SINGLE_NOTE\n    });\n    var URL = 'https://fe-notes.herokuapp.com/note/get/' + id;\n    axios.get(URL).then(function (response) {\n      dispatch({\n        type: SINGLE_NOTE,\n        payload: response.data\n      });\n      console.log(\"in viewnote\", response.data);\n    }).catch(function (error) {\n      dispatch({\n        type: ERROR,\n        payload: error\n      });\n    });\n  };\n};\nexport var deleteNote = function deleteNote(id) {\n  return function (dispatch) {\n    var URL = 'https://fe-notes.herokuapp.com/note/delete/' + id;\n    dispatch({\n      type: DELETING_NOTE\n    });\n    axios.delete(URL).then(function (response) {\n      dispatch({\n        type: DELETE_NOTE,\n        payload: response.data\n      });\n      dispatch({\n        type: SINGLE_NOTE,\n        payload: {}\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: ERROR,\n        payload: err\n      });\n    });\n  };\n};\n/* export const toggleShowUpdate = () => {\r\n  return {\r\n    type: TOGGLE_UPDATE_NOTE\r\n  };\r\n}; */\n\nexport var updateSingleNote = function updateSingleNote(note) {\n  return {\n    type: SINGLE_NOTE,\n    payload: note\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Willie\\front-end-project-week\\notes\\src\\actions\\index.js"],"names":["axios","ERROR","GET_NOTES","GETTING_NOTES","CREATING_NOTE","CREATE_NOTE","UPDATE_NOTE","DELETE_NOTE","UPDATING_NOTE","DELETING_NOTE","SINGLE_NOTE","GETTING_SINGLE_NOTE","TOGGLE_UPDATE_NOTE","getNotes","dispatch","type","get","then","response","payload","data","catch","error","createNote","newNote","post","err","updateNote","id","console","log","URL","put","title","textBody","viewNote","deleteNote","delete","updateSingleNote","note"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nexport const ERROR = 'ERROR';\r\nexport const GET_NOTES = 'GET_NOTES';\r\nexport const GETTING_NOTES = 'GETTING_NOTES';\r\nexport const CREATING_NOTE = 'CREATING_NOTE';\r\nexport const CREATE_NOTE = 'CREATE_NOTE';\r\nexport const UPDATE_NOTE = 'UPDATE_NOTES';\r\nexport const DELETE_NOTE = 'DELETE_NOTE';\r\nexport const UPDATING_NOTE = 'UPDATING_NOTE';\r\nexport const DELETING_NOTE = 'DELETING_NOTE';\r\nexport const SINGLE_NOTE = 'SINGLE_NOTE';\r\nexport const GETTING_SINGLE_NOTE = 'GETTING_SINGLE_NOTE';\r\nexport const TOGGLE_UPDATE_NOTE = 'TOGGLE_UPDATE_NOTE';\r\n\r\n\r\n\r\n\r\nexport const getNotes = () => {\r\n    return (dispatch) => {\r\n      dispatch({type: GETTING_NOTES})\r\n      axios\r\n      .get('https://fe-notes.herokuapp.com/note/get/all')\r\n      .then(response => {\r\n        dispatch({type: GET_NOTES, payload: response.data}) \r\n        //this.setState(() => ({ notes: response.data }));\r\n      })\r\n      .catch(error => {\r\n        dispatch({type: ERROR, payload: error})\r\n     \r\n      });\r\n      \r\n    }\r\n  }\r\n\r\nexport const createNote = (newNote) => {\r\n    return (dispatch) => {\r\n      dispatch({type: CREATING_NOTE})\r\n     \r\n    axios.post('https://fe-notes.herokuapp.com/note/create', newNote)       \r\n    .then( response => {\r\n \r\n          dispatch({ type: CREATE_NOTE, payload: response.data })\r\n         \r\n        })\r\n        .catch( err => {\r\n          dispatch({ type: ERROR, payload: err })\r\n        })\r\n    }\r\n  } \r\n\r\n  export const updateNote = (newNote, id) => {\r\n   console.log(\"newNote\", newNote)\r\n   console.log(\"id\", id)\r\n     \r\n   return (dispatch) => {\r\n    dispatch({type: UPDATING_NOTE})\r\n    const URL = 'https://fe-notes.herokuapp.com/note/edit/' + id;\r\n    axios\r\n        .put(URL, {\r\n          title: newNote.title,\r\n    textBody: newNote.textBody,\r\n        })   \r\n        .then(response => {\r\n          dispatch({ type: UPDATE_NOTE, payload: response.data }) \r\n        \r\n        })\r\n        .catch(error => {\r\n          dispatch({ type: ERROR, payload: error }) \r\n        });\r\n}\r\n  }\r\n\r\nexport const viewNote = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({type: GETTING_SINGLE_NOTE})\r\n    const URL = 'https://fe-notes.herokuapp.com/note/get/' + id;\r\n    axios\r\n      .get(URL)\r\n      .then(response => {\r\n        dispatch({ type: SINGLE_NOTE, payload: response.data })\r\n        console.log(\"in viewnote\", response.data)\r\n      })\r\n      .catch(error => {\r\n        dispatch({ type: ERROR, payload: error })    \r\n      });\r\n    }\r\n  }\r\n\r\nexport const deleteNote = (id) => {\r\n    return (dispatch) => {\r\n      const URL = 'https://fe-notes.herokuapp.com/note/delete/' + id;\r\n      dispatch({type: DELETING_NOTE})\r\n      axios\r\n      .delete(URL)\r\n      .then(response => {\r\n            dispatch({ type: DELETE_NOTE, payload: response.data });\r\n            dispatch({ type: SINGLE_NOTE, payload: {} });\r\n        })\r\n        .catch( err => {\r\n          dispatch({type: ERROR, payload: err })\r\n        })\r\n  \r\n    }\r\n  }\r\n\r\n  \r\n\r\n/* export const toggleShowUpdate = () => {\r\n  return {\r\n    type: TOGGLE_UPDATE_NOTE\r\n  };\r\n}; */\r\n\r\nexport const updateSingleNote = note => {\r\n  return {\r\n    type: SINGLE_NOTE,\r\n    payload: note\r\n  };\r\n};"]},"metadata":{},"sourceType":"module"}