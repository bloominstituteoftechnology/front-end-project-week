{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rdesa\\\\Desktop\\\\LambdaSchool\\\\front-end-project-week\\\\src\\\\components\\\\Note.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown'; // React wasn't happy with me wrapping markdown inside of a giant Link component, so I found a way around it using Route.\n// This is a simple display of the note title and body copy. It also has logic to prettify the preview overflow.\n\nvar Note = function Note(props) {\n  return React.createElement(Route, {\n    render: function render(_ref) {\n      var history = _ref.history;\n      return React.createElement(\"div\", {\n        className: \"note\",\n        onClick: function onClick() {\n          history.push(\"/notes/\".concat(props.note._id));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, props.note.title.length > 17 ? props.note.title.substring(0, 16) + \"...\" : props.note.title), React.createElement(ReactMarkdown, {\n        source: props.note.textBody.length > 200 ? props.note.textBody.substring(0, 200) + \"...\" : props.note.textBody,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  });\n};\n\nexport default Note;","map":{"version":3,"sources":["C:\\Users\\rdesa\\Desktop\\LambdaSchool\\front-end-project-week\\src\\components\\Note.js"],"names":["React","Route","ReactMarkdown","Note","props","history","push","note","_id","title","length","substring","textBody"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,aAAP,MAA0B,gBAA1B,C,CAGA;AACA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SACd,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAA,UAAEC,OAAF,QAAEA,OAAF;AAAA,aACX;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,OAAO,EAAE,mBAAM;AAAEA,UAAAA,OAAO,CAACC,IAAR,kBAAuBF,KAAK,CAACG,IAAN,CAAWC,GAAlC;AAA0C,SAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,KAAK,CAACG,IAAN,CAAWE,KAAX,CAAiBC,MAAjB,GAA0B,EAA1B,GAA+BN,KAAK,CAACG,IAAN,CAAWE,KAAX,CAAiBE,SAAjB,CAA2B,CAA3B,EAA6B,EAA7B,IAAmC,KAAlE,GAA0EP,KAAK,CAACG,IAAN,CAAWE,KAA1F,CADJ,EAEI,oBAAC,aAAD;AAAe,QAAA,MAAM,EAAEL,KAAK,CAACG,IAAN,CAAWK,QAAX,CAAoBF,MAApB,GAA6B,GAA7B,GAAmCN,KAAK,CAACG,IAAN,CAAWK,QAAX,CAAoBD,SAApB,CAA8B,CAA9B,EAAgC,GAAhC,IAAuC,KAA1E,GAAkFP,KAAK,CAACG,IAAN,CAAWK,QAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADW;AAAA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc;AAAA,CAAlB;;AAUA,eAAeT,IAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\n\n\n// React wasn't happy with me wrapping markdown inside of a giant Link component, so I found a way around it using Route.\n// This is a simple display of the note title and body copy. It also has logic to prettify the preview overflow.\n\nconst Note = props => (\n    <Route render={({history}) => (\n        <div className='note' onClick={() => { history.push(`/notes/${props.note._id}`) }}>\n            <h2>{props.note.title.length > 17 ? props.note.title.substring(0,16) + \"...\" : props.note.title}</h2>\n            <ReactMarkdown source={props.note.textBody.length > 200 ? props.note.textBody.substring(0,200) + \"...\" : props.note.textBody} />\n            \n        </div>\n    )} />\n  )\n\nexport default Note;"]},"metadata":{},"sourceType":"module"}