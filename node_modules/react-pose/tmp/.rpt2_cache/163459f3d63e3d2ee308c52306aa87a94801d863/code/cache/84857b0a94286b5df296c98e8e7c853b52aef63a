{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { Fragment } from 'react';\r\nimport { handleIncomingChildren, makeChildList, removeFromChildren } from './children';\r\nvar Transition = (function (_super) {\r\n    tslib_1.__extends(Transition, _super);\r\n    function Transition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = {\r\n            incomingChildren: [],\r\n            isLeaving: new Set(),\r\n            removeFromTree: function (key) { return function () {\r\n                var isLeaving = _this.state.isLeaving;\r\n                isLeaving.delete(key);\r\n                _this.removeFromChildren(key);\r\n            }; }\r\n        };\r\n        return _this;\r\n    }\r\n    Transition.prototype.removeFromChildren = function (key) {\r\n        var children = this.state.children;\r\n        this.setState({\r\n            children: removeFromChildren(children, key)\r\n        });\r\n    };\r\n    Transition.prototype.shouldComponentUpdate = function (nextProps, nextState) {\r\n        return this.state !== nextState;\r\n    };\r\n    Transition.prototype.render = function () {\r\n        return React.createElement(Fragment, null, this.state.children);\r\n    };\r\n    Transition.defaultProps = {\r\n        flipMove: false,\r\n        preEnterPose: 'exit',\r\n        enterPose: 'enter',\r\n        exitPose: 'exit'\r\n    };\r\n    Transition.getDerivedStateFromProps = function (props, _a) {\r\n        var isLeaving = _a.isLeaving, removeFromTree = _a.removeFromTree, children = _a.children;\r\n        var incomingChildren = makeChildList(props.children);\r\n        return {\r\n            incomingChildren: incomingChildren,\r\n            children: handleIncomingChildren({\r\n                incomingChildren: incomingChildren,\r\n                displayedChildren: children,\r\n                isLeaving: isLeaving,\r\n                removeFromTree: removeFromTree,\r\n                groupProps: props\r\n            })\r\n        };\r\n    };\r\n    return Transition;\r\n}(React.Component));\r\nexport default Transition;\r\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/components/Transition/index.tsx\"],\"names\":[],\"mappings\":\";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAEjC,OAAO,EACL,sBAAsB,EACtB,aAAa,EACb,kBAAkB,EACnB,MAAM,YAAY,CAAC;AAEpB;IAAyB,sCAA6B;IAAtD;QAAA,qEAmDC;QAzBC,WAAK,GAAU;YACb,gBAAgB,EAAE,EAAE;YACpB,SAAS,EAAE,IAAI,GAAG,EAAE;YACpB,cAAc,EAAE,UAAA,GAAG,IAAI,OAAA;gBACb,IAAA,iCAAS,CAAgB;gBACjC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACtB,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;YAC/B,CAAC,EAJsB,CAItB;SACF,CAAC;;IAiBJ,CAAC;IAfC,uCAAkB,GAAlB,UAAmB,GAAW;QACpB,IAAA,8BAAQ,CAAgB;QAEhC,IAAI,CAAC,QAAQ,CAAC;YACZ,QAAQ,EAAE,kBAAkB,CAAC,QAAQ,EAAE,GAAG,CAAC;SAC5C,CAAC,CAAC;IACL,CAAC;IAED,0CAAqB,GAArB,UAAsB,SAAgB,EAAE,SAAgB;QACtD,OAAO,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC;IAClC,CAAC;IAED,2BAAM,GAAN;QACE,OAAO,oBAAC,QAAQ,QAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAY,CAAC;IACpD,CAAC;IAjDM,uBAAY,GAAG;QACpB,QAAQ,EAAE,KAAK;QACf,YAAY,EAAE,MAAM;QACpB,SAAS,EAAE,OAAO;QAClB,QAAQ,EAAE,MAAM;KACjB,CAAC;IAEK,mCAAwB,GAAG,UAChC,KAAY,EACZ,EAA8C;YAA5C,wBAAS,EAAE,kCAAc,EAAE,sBAAQ;QAErC,IAAM,gBAAgB,GAAG,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAEvD,OAAO;YACL,gBAAgB,kBAAA;YAChB,QAAQ,EAAE,sBAAsB,CAAC;gBAC/B,gBAAgB,kBAAA;gBAChB,iBAAiB,EAAE,QAAQ;gBAC3B,SAAS,WAAA;gBACT,cAAc,gBAAA;gBACd,UAAU,EAAE,KAAK;aAClB,CAAC;SACH,CAAC;IACJ,CAAC,CAAC;IA2BJ,iBAAC;CAAA,AAnDD,CAAyB,KAAK,CAAC,SAAS,GAmDvC;AAED,eAAe,UAAU,CAAC\"}","dts":{"name":"/Users/mattperry/Sites/popmotion/packages/react-pose/components/Transition/index.d.ts","text":"import * as React from 'react';\r\nimport { Props, State } from './types';\r\ndeclare class Transition extends React.Component<Props, State> {\r\n    static defaultProps: {\r\n        flipMove: boolean;\r\n        preEnterPose: string;\r\n        enterPose: string;\r\n        exitPose: string;\r\n    };\r\n    static getDerivedStateFromProps: (props: Props, { isLeaving, removeFromTree, children }: State) => {\r\n        incomingChildren: React.ReactElement<any>[];\r\n        children: React.ReactElement<any>[];\r\n    };\r\n    state: State;\r\n    removeFromChildren(key: string): void;\r\n    shouldComponentUpdate(nextProps: Props, nextState: State): boolean;\r\n    render(): JSX.Element;\r\n}\r\nexport default Transition;\r\n"}}
