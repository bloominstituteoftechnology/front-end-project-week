{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { handleIncomingChildren, makeChildList, removeFromChildren } from '../utils/children';\r\nvar Fragment = React.Fragment;\r\nvar PoseGroup = (function (_super) {\r\n    tslib_1.__extends(PoseGroup, _super);\r\n    function PoseGroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = {\r\n            incomingChildren: [],\r\n            isLeaving: new Set(),\r\n            removeFromTree: function (key) { return function () {\r\n                var isLeaving = _this.state.isLeaving;\r\n                isLeaving.delete(key);\r\n                _this.removeFromChildren(key);\r\n            }; }\r\n        };\r\n        return _this;\r\n    }\r\n    PoseGroup.prototype.removeFromChildren = function (key) {\r\n        var children = this.state.children;\r\n        this.setState({\r\n            children: removeFromChildren(children, key)\r\n        });\r\n    };\r\n    PoseGroup.prototype.shouldComponentUpdate = function (nextProps, nextState) {\r\n        return this.state !== nextState;\r\n    };\r\n    PoseGroup.prototype.render = function () {\r\n        var children = this.state.children;\r\n        return React.createElement(Fragment, null, children);\r\n    };\r\n    PoseGroup.defaultProps = {\r\n        flipMove: true,\r\n        preEnterPose: 'exit',\r\n        enterPose: 'enter',\r\n        exitPose: 'exit',\r\n        singleChildOnly: false\r\n    };\r\n    PoseGroup.getDerivedStateFromProps = function (props, _a) {\r\n        var isLeaving = _a.isLeaving, removeFromTree = _a.removeFromTree, children = _a.children;\r\n        var incomingChildren = makeChildList(props.children);\r\n        return {\r\n            incomingChildren: incomingChildren,\r\n            children: handleIncomingChildren({\r\n                incomingChildren: incomingChildren,\r\n                displayedChildren: children,\r\n                isLeaving: isLeaving,\r\n                removeFromTree: removeFromTree,\r\n                enterPose: props.enterPose,\r\n                exitPose: props.exitPose,\r\n                flipMove: props.flipMove,\r\n                animateOnMount: props.animateOnMount,\r\n                preEnterPose: props.preEnterPose\r\n            })\r\n        };\r\n    };\r\n    return PoseGroup;\r\n}(React.Component));\r\nexport { PoseGroup };\r\n//# sourceMappingURL=PoseGroup.js.map","map":"{\"version\":3,\"file\":\"PoseGroup.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/components/PoseGroup.tsx\"],\"names\":[],\"mappings\":\";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EACL,sBAAsB,EACtB,aAAa,EACb,kBAAkB,EACnB,MAAM,mBAAmB,CAAC;AACnB,IAAA,yBAAQ,CAAW;AAmB3B;IAAwB,qCAA6B;IAArD;QAAA,qEA0DC;QA3BC,WAAK,GAAU;YACb,gBAAgB,EAAE,EAAE;YACpB,SAAS,EAAE,IAAI,GAAG,EAAE;YACpB,cAAc,EAAE,UAAA,GAAG,IAAI,OAAA;gBACb,IAAA,iCAAS,CAAgB;gBACjC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACtB,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;YAC/B,CAAC,EAJsB,CAItB;SACF,CAAC;;IAmBJ,CAAC;IAjBC,sCAAkB,GAAlB,UAAmB,GAAW;QACpB,IAAA,8BAAQ,CAAgB;QAEhC,IAAI,CAAC,QAAQ,CAAC;YACZ,QAAQ,EAAE,kBAAkB,CAAC,QAAQ,EAAE,GAAG,CAAC;SAC5C,CAAC,CAAC;IACL,CAAC;IAED,yCAAqB,GAArB,UAAsB,SAAgB,EAAE,SAAgB;QACtD,OAAO,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC;IAClC,CAAC;IAED,0BAAM,GAAN;QACU,IAAA,8BAAQ,CAAgB;QAEhC,OAAO,oBAAC,QAAQ,QAAE,QAAQ,CAAY,CAAC;IACzC,CAAC;IAxDM,sBAAY,GAAG;QACpB,QAAQ,EAAE,IAAI;QACd,YAAY,EAAE,MAAM;QACpB,SAAS,EAAE,OAAO;QAClB,QAAQ,EAAE,MAAM;QAChB,eAAe,EAAE,KAAK;KACvB,CAAC;IAEK,kCAAwB,GAAG,UAChC,KAAY,EACZ,EAA8C;YAA5C,wBAAS,EAAE,kCAAc,EAAE,sBAAQ;QAErC,IAAM,gBAAgB,GAAG,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAEvD,OAAO;YACL,gBAAgB,kBAAA;YAChB,QAAQ,EAAE,sBAAsB,CAAC;gBAC/B,gBAAgB,kBAAA;gBAChB,iBAAiB,EAAE,QAAQ;gBAC3B,SAAS,WAAA;gBACT,cAAc,gBAAA;gBACd,SAAS,EAAE,KAAK,CAAC,SAAS;gBAC1B,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,cAAc,EAAE,KAAK,CAAC,cAAc;gBACpC,YAAY,EAAE,KAAK,CAAC,YAAY;aACjC,CAAC;SACH,CAAC;IACJ,CAAC,CAAC;IA6BJ,gBAAC;CAAA,AA1DD,CAAwB,KAAK,CAAC,SAAS,GA0DtC;AAED,OAAO,EAAE,SAAS,EAAE,CAAC\"}","dts":{"name":"/Users/mattperry/Sites/popmotion/packages/react-pose/components/PoseGroup.d.ts","text":"/// <reference types=\"react\" />\r\nimport * as React from 'react';\r\nimport { ReactElement } from 'react';\r\nexport declare type Props = {\r\n    children: React.ReactElement<any> | Array<React.ReactElement<any>>;\r\n    flipMove?: boolean;\r\n    preEnterPose?: string;\r\n    enterPose?: string;\r\n    exitPose?: string;\r\n    animateOnMount?: boolean;\r\n    singleChildOnly?: boolean;\r\n};\r\nexport declare type State = {\r\n    children?: Array<ReactElement<any>>;\r\n    incomingChildren?: Array<ReactElement<any>>;\r\n    isLeaving: Set<string>;\r\n    removeFromTree: (key: string) => void;\r\n};\r\ndeclare class PoseGroup extends React.Component<Props, State> {\r\n    static defaultProps: {\r\n        flipMove: boolean;\r\n        preEnterPose: string;\r\n        enterPose: string;\r\n        exitPose: string;\r\n        singleChildOnly: boolean;\r\n    };\r\n    static getDerivedStateFromProps: (props: Props, { isLeaving, removeFromTree, children }: State) => {\r\n        incomingChildren: React.ReactElement<any>[];\r\n        children: React.ReactElement<any>[];\r\n    };\r\n    state: State;\r\n    removeFromChildren(key: string): void;\r\n    shouldComponentUpdate(nextProps: Props, nextState: State): boolean;\r\n    render(): JSX.Element;\r\n}\r\nexport { PoseGroup };\r\n"}}
