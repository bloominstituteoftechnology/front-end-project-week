{"version":3,"sources":["Components/Note.js","Components/NoteList.js","Components/Nav.js","Components/NoteEdit.js","Components/SingleNote.js","Components/NewNote.js","App.js","actions/actions.js","serviceWorker.js","reducers/reducer.js","index.js"],"names":["Note","_this","this","id","props","truncatedText","textBody","length","substring","react_default","a","createElement","className","onClick","clickHandler","title","React","Component","NoteList","notes","map","note","Components_Note","_id","key","Nav","EditNote","type","defaultValue","onChange","changeHandler","name","updateNote","SingleNote","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","preventDefault","setState","defineProperty","target","value","editNote","state","edit","console","log","axios","put","concat","then","response","data","catch","err","_this2","get","deleteNote","NoteEdit","NewNote","placeholder","createNote","App","selectNote","getNotes","Components_Nav","Components_NoteList","Components_NewNote","Components_SingleNote","toggleModal","toggle","connect","message","error","dispatch","payload","delete","post","success","Boolean","window","location","hostname","match","initialState","noteReducer","arguments","undefined","action","objectSpread","store","createStore","rootReducer","applyMiddleware","logger","thunk","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16dc6735.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\n\nclass Note extends React.Component {\n  render() {\n    const id = this.props.id;\n    const truncatedText =\n      this.props.textBody.length < 121\n        ? this.props.textBody\n        : this.props.textBody.substring(0, 120) + \"...\";\n    return (\n      <div className=\"note\" onClick={() => this.props.clickHandler(id)}>\n        <h1>{this.props.title}</h1>\n        <p className=\"truncate\">{truncatedText}</p>\n      </div>\n    );\n  }\n}\n\nexport default Note;\n","import React from \"react\";\nimport Note from \"./Note\";\nimport \"../App.css\";\n\nconst NoteList = props => {\n  return (\n    <div className=\"notes\">\n      <h1>Your Notes:</h1>\n      <div className=\"note-list\">\n        {props.notes.map(note => {\n          return (\n            <Note\n              textBody={note.textBody}\n              clickHandler={props.clickHandler}\n              id={note._id}\n              key={note._id}\n              title={note.title}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default NoteList;\n","import React from \"react\";\nimport \"../App.css\";\n\nconst Nav = props => {\n  return (\n    <div className=\"navbar\">\n      <h1>\n        Lambda\n        <br />\n        Notes\n      </h1>\n      <div className=\"button\" onClick={() => props.clickHandler(\"all\")}>\n        View Your Notes\n      </div>\n      <div className=\"button\" onClick={() => props.clickHandler(\"new\")}>\n        + Create New Note\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport \"../App.css\";\n\nclass EditNote extends Component {\n  render() {\n    return (\n      <div className=\"new-note\">\n        <h2>Edit Note:</h2>\n        <input\n          type=\"text\"\n          defaultValue={this.props.title}\n          onChange={this.props.changeHandler}\n          name=\"title\"\n        />\n        <textarea\n          defaultValue={this.props.textBody}\n          onChange={this.props.changeHandler}\n          name=\"textBody\"\n        />\n        <div className=\"save-button\" onClick={this.props.updateNote}>\n          Save\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditNote;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport EditNote from \"./NoteEdit\";\n\nclass SingleNote extends Component {\n  constructor() {\n    super();\n    this.state = {\n      note: [],\n      edit: false,\n      title: \"\",\n      textBody: \"\",\n      id: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(`https://fe-notes.herokuapp.com/note/get/${this.props.id}`)\n      .then(response => {\n        this.setState({ note: response.data });\n      })\n      .catch(err => console.log(err));\n  }\n  changeHandler = e => {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  editNote = e => {\n    e.preventDefault();\n    this.setState({\n      title: this.state.note.title,\n      textBody: this.state.note.textBody,\n      edit: true\n    });\n  };\n  updateNote = e => {\n    console.log(this.props.id);\n    console.log(this.state.textBody);\n    e.preventDefault();\n    const note = {\n      title: this.state.title,\n      textBody: this.state.textBody\n    };\n    axios\n      .put(`https://fe-notes.herokuapp.com/note/edit/${this.props.id}`, note)\n      .then(response => {\n        this.setState({\n          note: response.data,\n          edit: false\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    if (this.state.edit === false) {\n      return (\n        <div className=\"single-note\">\n          <div className=\"edit-buttons\">\n            <p onClick={this.editNote}>edit</p>\n            <p onClick={this.props.deleteNote}>delete</p>\n          </div>\n          <div className=\"note-header\">\n            <h2>{this.state.note.title}</h2>\n          </div>\n          <p>{this.state.note.textBody}</p>\n        </div>\n      );\n    } else {\n      return (\n        <EditNote\n          changeHandler={this.changeHandler}\n          title={this.state.title}\n          textBody={this.state.textBody}\n          updateNote={this.updateNote}\n        />\n      );\n    }\n  }\n}\n\nexport default SingleNote;\n","import React, { Component } from \"react\";\nimport \"../App.css\";\n\nclass NewNote extends Component {\n  render() {\n    return (\n      <div className=\"new-note\">\n        <h2>Create New Note:</h2>\n        <input\n          type=\"text\"\n          placeholder=\"New Title\"\n          onChange={this.props.changeHandler}\n          name=\"title\"\n        />\n        <textarea\n          placeholder=\"New Content\"\n          onChange={this.props.changeHandler}\n          name=\"textBody\"\n        />\n        <div className=\"save-button\" onClick={this.props.createNote}>\n          Save\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NewNote;\n","import React, { Component } from \"react\";\nimport NoteList from \"./Components/NoteList\";\nimport Nav from \"./Components/Nav\";\nimport SingleNote from \"./Components/SingleNote.js\";\nimport NewNote from \"./Components/NewNote\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport {\n  getNotes,\n  selectNote,\n  deleteNote,\n  createNote\n} from \"./actions/actions.js\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: \"\",\n      textBody: \"\"\n    };\n  }\n  componentDidMount() {\n    this.props.getNotes();\n  }\n  clickHandler = id => {\n    this.props.selectNote(id);\n    this.props.getNotes();\n  };\n\n  changeHandler = e => {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  createNote = e => {\n    e.preventDefault();\n    const note = {\n      title: this.state.title,\n      textBody: this.state.textBody\n    };\n    this.props.createNote(note);\n  };\n\n  deleteNote = e => {\n    e.preventDefault();\n    this.props.deleteNote(this.props.id);\n    this.props.getNotes();\n  };\n\n  render() {\n    if (this.props.id === \"all\") {\n      return (\n        <div className=\"App\">\n          <Nav clickHandler={this.clickHandler} />{\" \"}\n          <NoteList notes={this.props.notes} clickHandler={this.clickHandler} />{\" \"}\n        </div>\n      );\n    } else if (this.props.id === \"new\") {\n      return (\n        <div className=\"App\">\n          <Nav clickHandler={this.clickHandler} />{\" \"}\n          <NewNote\n            changeHandler={this.changeHandler}\n            createNote={this.createNote}\n          />{\" \"}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <Nav clickHandler={this.clickHandler} />{\" \"}\n          <SingleNote\n            id={this.props.id}\n            notes={this.props.notes}\n            toggleModal={this.toggleModal}\n            deleteNote={this.deleteNote}\n            toggle={this.props.toggle}\n          />{\" \"}\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    notes: state.notes,\n    id: state.id,\n    title: state.title,\n    textBody: state.textBody,\n    message: state.message,\n    error: state.error\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getNotes, selectNote, deleteNote, createNote }\n)(App);\n","import axios from \"axios\";\n\nexport const GET_NOTES = \"GET_NOTES\";\nexport const FOUND_NOTES = \"FOUND_NOTES\";\nexport const ERROR = \"ERROR\";\nexport const DELETE = \"DELETE\";\nexport const CREATE_NOTE = \"CREATE_NOTE\";\nexport const SELECT_NOTE = \"SELECT_NOTE\";\nexport const FOUND_NOTE = \"FOUND_NOTE\";\nexport const GET_ALL = \"GET_ALL\";\n\nexport const getNotes = () => {\n  return dispatch => {\n    dispatch({\n      type: GET_NOTES,\n      payload: \"Fetching your notes!\"\n    });\n    axios\n      .get(`https://fe-notes.herokuapp.com/note/get/all`)\n      .then(response => {\n        dispatch({\n          type: FOUND_NOTES,\n          payload: response.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch({\n          type: ERROR,\n          payload: \"Could not retrieve notes.\"\n        });\n      });\n  };\n};\n\nexport const deleteNote = id => {\n  return dispatch => {\n    dispatch({\n      type: DELETE,\n      payload: \"Deleting your note\"\n    });\n    axios\n      .delete(`https://fe-notes.herokuapp.com/note/delete/${id}`)\n      .then(() => {\n        axios\n          .get(`https://fe-notes.herokuapp.com/note/get/all`)\n          .then(response => {\n            dispatch({\n              type: GET_ALL,\n              payload: response.data\n            });\n          })\n          .catch(err => {\n            dispatch({\n              type: ERROR,\n              payload: \"Could not retrieve notes\"\n            });\n          });\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch({\n          type: ERROR,\n          payload: \"Could not delete note\"\n        });\n      });\n  };\n};\n\nexport const selectNote = id => {\n  return dispatch => {\n    dispatch({\n      type: SELECT_NOTE,\n      payload: id\n    });\n    axios\n      .get(`https://fe-notes.herokuapp.com/note/get/${id}`)\n      .then(response => {\n        dispatch({\n          type: FOUND_NOTE,\n          payload: response.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch({\n          type: ERROR,\n          payload: \"Could not retrieve note.\"\n        });\n      });\n  };\n};\n\nexport const createNote = note => {\n  return dispatch => {\n    axios\n      .post(\"https://fe-notes.herokuapp.com/note/create\", note)\n      .then(response => {\n        dispatch({\n          type: CREATE_NOTE,\n          payload: response.data.success\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch({\n          type: ERROR,\n          payload: \"Could not create note\"\n        });\n      });\n  };\n};\n\n//click handler to set id\n//change handler to set state\n//create note\n//delete note\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  GET_NOTES,\n  FOUND_NOTES,\n  ERROR,\n  DELETE,\n  CREATE_NOTE,\n  FOUND_NOTE,\n  SELECT_NOTE,\n  GET_ALL\n} from \"../actions/actions\";\n\nconst initialState = {\n  notes: [],\n  id: \"all\",\n  title: \"\",\n  textBody: \"\",\n  message: \"\",\n  error: \"\"\n};\n\nconst noteReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_NOTES:\n      return { ...state, message: action.payload };\n    case FOUND_NOTES:\n      return { ...state, notes: action.payload };\n    case ERROR:\n      return { ...state, error: action.payload };\n    case DELETE:\n      return { ...state, message: action.payload };\n    case SELECT_NOTE:\n      return { ...state, id: action.payload };\n    case FOUND_NOTE:\n      return { ...state, notes: action.payload };\n    case CREATE_NOTE:\n      return { ...state, id: action.payload };\n    case GET_ALL:\n      return { ...state, id: \"all\", notes: action.payload };\n    default:\n      return state;\n  }\n};\nexport default noteReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers/reducer\";\n\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}